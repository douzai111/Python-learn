# -------------------------------------------------偏函数------------------------------------------------------#
# 例1：进制转换
# int()函数提供额外的base参数，默认值为10。如果传入base参数，就可以做N进制的转换：
print(int("12356", base=8))
print(int("12356", 16))


# 假设要转换大量的二进制字符串，每次都传入int(x, base=2)非常麻烦，于是，我们想到，可以定义一个int2()的函数，默认把base=2传进去：
def int2(x, base=2):
    return int(x, base)


# 这样，我们转换二进制就非常方便了：
print(int2("100001"))


# functools.partial就是帮助我们创建一个偏函数的，不需要我们自己定义int2()，可以直接使用下面的代码创建一个新的函数int2:
int3 = functools.partial(int, base=2)
print(int3("10101"))
# 注意到上面的int3函数，仅仅是把base参数重新设定默认值为2，但也可以在函数调用时传入其他值：
print(int3("10101", base=10))

# 例2：max函数
max2 = functools.partial(max, 10)
# 实际上会把10作为*args的一部分自动加到左边，也就是：
print(max2(4, 6, 3))
